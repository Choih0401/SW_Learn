let express,next,cors,morgan,v1;_6e6‍.w("express",[["default",["express"],function(v){express=v}]]);_6e6‍.w("next",[["default",["next"],function(v){next=v}]]);_6e6‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_6e6‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_6e6‍.w("./routes/v1/v1",[["default",["v1"],function(v){v1=v}]]);






const dev = process.env.NODE_ENV !== 'production';
const prod = process.env.NODE_ENV === 'production';

const app = next({dev})
//const handle = app.getRequestHandler()

app.prepare().then(() => {
    const server = express()
    
    server.set('port', process.env.PORT || 5000)

    server.use(morgan('dev'));
    server.use(express.json())
    server.use(express.urlencoded({ extended: true }));
    server.use(cors())

    server.use('/v1', v1)

    server.get('*', (req, res) => {
        res.sendStatus(404)
    })

    server.listen(server.get('port'), () => {
        _6e6‍.g.console.log('Express server listening on port ' + server.get('port'))
    })
})
.catch(ex => {
    _6e6‍.g.console.error(ex.stack)
    process.exit(1)
})